---
- name: Ensure nginx vhost paths exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ nginx_path_vhosts_conf }}"
    - "{{ nginx_path_vhosts }}"
  notify: reload nginx

- name: Remove default nginx vhost config
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ nginx_path_vhosts }}/default"
    - "{{ nginx_path_vhosts_conf }}/default"
  notify: restart nginx

- name: Configure nginx (default server)
  template:
    src: vhost-default.j2
    dest: "{{ nginx_path_vhosts_conf }}/default.conf"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: Enable default server
  file:
    state: link
    src: "{{ nginx_path_vhosts_conf }}/default.conf"
    dest: "{{nginx_path_vhosts }}/default.conf"
  notify:
   - reload nginx

- name: Configure nginx (general sites)
  template:
    src: vhost-site.j2
    dest: "{{ nginx_path_vhosts_conf }}/{{ item.key }}.conf"
    owner: root
    group: root
    mode: 0644
  with_dict: "{{ nginx_vhosts }}"
  when: 
    - nginx_vhosts | length > 0
    - (item.value.is_api | default(false)) == false
  notify:
    - reload nginx

- name: Configure nginx (api sites)
  template:
    src: vhost-api.j2
    dest: "{{ nginx_path_vhosts_conf }}/{{ item.key }}.conf"
    owner: root
    group: root
    mode: 0644
  with_dict: "{{ nginx_vhosts }}"
  when: 
    - nginx_vhosts | length > 0
    - (item.value.is_api | default(false)) == true
  notify:
    - reload nginx

- name: Configure nginx (SSL for sites)
  template:
    src: ssl-site.conf.j2
    dest: "{{ nginx_path_ssl_conf }}/ssl-{{ item.key }}.conf"
    owner: root
    group: root
    mode: 0644
  with_dict: "{{ nginx_vhosts }}"
  when: nginx_vhosts | length > 0
  notify:
    - reload nginx

- name: Create vhost site directories
  file:
    path: "{{ item.value.site_root}}/site"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: 0750
  with_dict: "{{ nginx_vhosts }}"
  when: nginx_vhosts | length > 0
  notify: reload nginx

- name: Create vhost log directories
  file:
    path: "{{ item.value.site_root}}/logs"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: 0750
  with_dict: "{{ nginx_vhosts }}"
  when: nginx_vhosts | length > 0
  notify: reload nginx

- name: Enable sites
  file:
    state: link
    src: "{{ nginx_path_vhosts_conf }}/{{ item.key }}.conf"
    dest: "{{nginx_path_vhosts }}/{{ item.key }}.conf"
  with_dict: "{{ nginx_vhosts }}"
  when: nginx_vhosts | length > 0
  notify:
    - reload nginx
